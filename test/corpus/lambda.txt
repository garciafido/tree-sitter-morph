============================
lambda_declaration_statement
============================

lambda bar<A extends B | C, S extends D>(a: A) => "bar"

---

(Module (declarations__list (NamedLambdaDeclaration (identifier (Identifier)) (type_parameters (TypeParameters (type_parameters__list (TypeParameter (name (Identifier)) (constraint (Type (TypeUnion (types__list (TypeIdentifier (Identifier))) (types__list (TypeIdentifier (Identifier)))))))) (type_parameters__list (TypeParameter (name (Identifier)) (constraint (Type (TypeUnion (types__list (TypeIdentifier (Identifier)))))))))) (parameters__list (NamedLambdaParameter (identifier (Identifier)) (type (Type (TypeUnion (types__list (TypeIdentifier (Identifier)))))))) (expression (Expression (PrimaryExpression (Literal (StringLiteral))))))))

=================
lambda empty list
=================

lambda foo() => []

---

 (Module (declarations__list (NamedLambdaDeclaration (identifier (Identifier)) (expression (Expression (PrimaryExpression (List)))))))

============
lambda while
============

lambda foo() => lambda () => while 2: 2
lambda foo() => while 2: 2

---

(Module (declarations__list (NamedLambdaDeclaration (identifier (Identifier)) (expression (Expression (PrimaryExpression (Lambda (WhileExpression (while_condition (Expression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))))) (expression (Expression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral))))))))))))) (declarations__list (NamedLambdaDeclaration (identifier (Identifier)) (WhileExpression (while_condition (Expression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))))) (expression (Expression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral))))))))))

=======================
lambda callable literal
=======================

lambda foo(list: List) => list.'first_element'()

---

  (Module (declarations__list (NamedLambdaDeclaration (identifier (Identifier)) (parameters__list (NamedLambdaParameter (identifier (Identifier)) (type (Type (TypeUnion (types__list (TypeIdentifier (Identifier)))))))) (expression (Expression (PrimaryExpression (FluentCall (expression (Identifier)) (parenthesis_callee (Literal (StringLiteral))))))))))