==================
boolean_expression
==================

lambda foo() => b + 8 * 9 and 101 > 0 < 19

---

(Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (BooleanExpression (left (Expression (PrimaryExpression (BinaryExpression (Addition (left (Identifier)) (right (BinaryExpression (Multiplication (left (Literal (NumberLiteral (IntegerLiteral)))) (right (Literal (NumberLiteral (IntegerLiteral)))))))))))) (Conjunction) (right (Expression (RelationalExpression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))) (GraterThan) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))) (LessThan) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))))))))))))

========
negation
========

lambda foo() => not a or b

---

  (Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (Negation (expression (Expression (BooleanExpression (left (Expression (PrimaryExpression (Identifier)))) (Disjunction) (right (Expression (PrimaryExpression (Identifier)))))))))))))

================
unary_expression
================

lambda foo() => -1+4

---

(Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (PrimaryExpression (BinaryExpression (Addition (left (UnaryFactor (NegativeFactor (NegativeSign) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral))))))) (right (Literal (NumberLiteral (IntegerLiteral))))))))))))


============
FunctionCall
============

lambda foo() => f(a)

---

 (Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (PrimaryExpression (NamedLambdaCallOrEdgeAccess (expression (CallableName (Identifier))) (function_call_parameters__list (Expression (PrimaryExpression (Identifier)))))))))))

===========
ChainedCall
===========

lambda foo() => f(a).f(b)

---

(Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (PrimaryExpression (ChainedNamedLambdaCallOrEdgeAccess (expression (NamedLambdaCallOrEdgeAccess (expression (CallableName (Identifier))) (function_call_parameters__list (Expression (PrimaryExpression (Identifier)))))) (function_call_identifier (Identifier)) (function_call_parameters__list (Expression (PrimaryExpression (Identifier)))))))))))

=========
Lambda OK
=========

lambda foo() => lambda () => 1

---

  (Module (statements__list (NamedLambdaDeclarationStatement (identifier (Identifier)) (expression (Expression (PrimaryExpression (Lambda (expression (Expression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))))))))))))

