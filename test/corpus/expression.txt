==================
boolean_expression
==================

const a = b + 8 * 9 and 101 > 0 < 19

---

    (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (BooleanExpression (left (PrimaryExpression (BinaryExpression (Addition (left (Identifier (CamelIdentifier))) (right (BinaryExpression (Multiplication (left (Literal (NumberLiteral (IntegerLiteral)))) (right (Literal (NumberLiteral (IntegerLiteral))))))))))) (Conjunction) (right (RelationalExpression (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))) (GraterThan) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))) (LessThan) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral)))))))))))

========
negation
========

const foo = not a or b

---

 (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (Negation (expression (BooleanExpression (left (PrimaryExpression (Identifier (CamelIdentifier)))) (Disjunction) (right (PrimaryExpression (Identifier (CamelIdentifier)))))))))))

================
unary_expression
================

const foo = -1+4

---

  (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (PrimaryExpression (BinaryExpression (Addition (left (UnaryFactor (NegativeFactor (NegativeSign) (PrimaryExpression (Literal (NumberLiteral (IntegerLiteral))))))) (right (Literal (NumberLiteral (IntegerLiteral)))))))))))



============
FunctionCall
============

const foo = f(a)

---

 (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (PrimaryExpression (FunctionCallOrEdgeAccess (expression (CallableName (Identifier (CamelIdentifier)))) (function_call_parameters__list (PrimaryExpression (Identifier (CamelIdentifier))))))))))


===========
ChainedCall
===========

const foo = f(a).f(b)

---

  (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (PrimaryExpression (ChainedFunctionCallOrEdgeAccess (expression (FunctionCallOrEdgeAccess (expression (CallableName (Identifier (CamelIdentifier)))) (function_call_parameters__list (PrimaryExpression (Identifier (CamelIdentifier)))))) (function_call_identifier (CamelIdentifier)) (function_call_parameters__list (PrimaryExpression (Identifier (CamelIdentifier))))))))))
=========
Lambda OK
=========

const x = lambda (x) => c

---

    (Module (statements__list (ConstantDeclarationStatement (name (CamelIdentifier)) (AssignmentSign) (value (PrimaryExpression (AnonymousFunction (parameters__list (CamelIdentifier)) (expression (PrimaryExpression (Identifier (CamelIdentifier))))))))))
