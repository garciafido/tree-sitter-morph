==================
boolean_expression
==================

const a = b + 8 * 9 and 101 > 0 < 19

---

(Module (Module_statements__list (ConstantDeclarationStatement (ConstantDeclarationStatement_name (Identifier (CamelIdentifier))) (AssignmentSign) (ConstantDeclarationStatement_value (Expression (BooleanExpression (Expression (PrimaryExpression (BinaryExpression (Addition (Addition_left (PrimaryExpression (Identifier (CamelIdentifier)))) (Addition_right (PrimaryExpression (BinaryExpression (Multiplication (Multiplication_left (PrimaryExpression (IntegerLiteral))) (Multiplication_right (PrimaryExpression (IntegerLiteral))))))))))) (Conjunction) (Expression (RelationalExpression (PrimaryExpression (IntegerLiteral)) (GraterThan) (PrimaryExpression (IntegerLiteral)) (LessThan) (PrimaryExpression (IntegerLiteral))))))))))


========
negation
========

const foo = not a or b

---

(Module (Module_statements__list (ConstantDeclarationStatement (ConstantDeclarationStatement_name (Identifier (CamelIdentifier))) (AssignmentSign) (ConstantDeclarationStatement_value (Expression (Negation (Expression (BooleanExpression (Expression (PrimaryExpression (Identifier (CamelIdentifier)))) (Disjunction) (Expression (PrimaryExpression (Identifier (CamelIdentifier))))))))))))

================
unary_expression
================

const foo = -1+4

---

(Module (Module_statements__list (ConstantDeclarationStatement (ConstantDeclarationStatement_name (Identifier (CamelIdentifier))) (AssignmentSign) (ConstantDeclarationStatement_value (Expression (PrimaryExpression (BinaryExpression (Addition (Addition_left (PrimaryExpression (UnaryFactor (NegativeFactor (NegativeSign) (PrimaryExpression (IntegerLiteral)))))) (Addition_right (PrimaryExpression (IntegerLiteral)))))))))))

============
FunctionCall
============

const foo = f(a)

---

 (Module (Module_statements__list (ConstantDeclarationStatement (ConstantDeclarationStatement_name (Identifier (CamelIdentifier))) (AssignmentSign) (ConstantDeclarationStatement_value (Expression (PrimaryExpression (FunctionCallOrEdgeAccess (FunctionCall (FunctionCall_expression (CallableExpression (CallableName (Identifier (CamelIdentifier))))) (FunctionCall_parameters (FunctionCallParameters (FunctionCallParameters_expressions__list (Expression (PrimaryExpression (Identifier (CamelIdentifier)))))))))))))))



===========
ChainedCall
===========

const foo = f(a).f(b)

---

 (Module (Module_statements__list (ConstantDeclarationStatement (ConstantDeclarationStatement_name (Identifier (CamelIdentifier))) (AssignmentSign) (ConstantDeclarationStatement_value (Expression (PrimaryExpression (ChainedFunctionCallOrEdgeAccess (ChainedFunctionCall (PrimaryExpression (FunctionCallOrEdgeAccess (FunctionCall (FunctionCall_expression (CallableExpression (CallableName (Identifier (CamelIdentifier))))) (FunctionCall_parameters (FunctionCallParameters (FunctionCallParameters_expressions__list (Expression (PrimaryExpression (Identifier (CamelIdentifier)))))))))) (Identifier (CamelIdentifier)) (FunctionCallParameters (FunctionCallParameters_expressions__list (Expression (PrimaryExpression (Identifier (CamelIdentifier))))))))))))))

