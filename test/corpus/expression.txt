==================
boolean_expression
==================

const a = b + 8 * 9 and 101 > 0 < 19

---

 (Program (ConstantDeclarationStatement
    (ConstantName (CamelIdentifier))
    (ConstantValue (BooleanExpression
        (BinaryExpression (CamelIdentifier) (Addition) (BinaryExpression (IntegerLiteral) (Multiplication) (IntegerLiteral)))
        (Conjunction)
        (RelationalExpression
            (IntegerLiteral) (GraterThan)
            (IntegerLiteral) (LessThan)
            (IntegerLiteral))))))

========
negation
========

const foo = not a or b

---

(Program (ConstantDeclarationStatement
    (ConstantName (CamelIdentifier))
    (ConstantValue (Negation
        (BooleanExpression (CamelIdentifier) (Disjunction) (CamelIdentifier))))))

============
FunctionCall
============

const foo = f(a)

---

(Program (ConstantDeclarationStatement (ConstantName (CamelIdentifier)) (ConstantValue
    (FunctionCall
        (CallableExpression (CallableName (CamelIdentifier)))
        (FunctionCallParameters (ParameterExpression (CamelIdentifier)))))))

===========
ChainedCall
===========

const foo = f(a).f(b)

---

(Program (ConstantDeclarationStatement (ConstantName (CamelIdentifier)) (ConstantValue
    (ChainedFunctionCallOrEdgeAccess (ChainedFunctionCall
        (FunctionCall (CallableExpression (CallableName (CamelIdentifier))) (FunctionCallParameters (ParameterExpression (CamelIdentifier))))
            (CamelIdentifier)
            (FunctionCallParameters (ParameterExpression (CamelIdentifier))))))))
