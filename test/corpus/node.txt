=================================
Simple node_declaration_statement
=================================

node foo {}

---

(Program (NodeDeclarationStatement (NodeName (CamelIdentifier))))

==================================
Extends node_declaration_statement
==================================

node foo extends FooBase {}

---

(Program (NodeDeclarationStatement (NodeName (CamelIdentifier)) (ExtendsName (PascalIdentifier))))

====================================
Decorator node_declaration_statement
====================================

@fooDeco()
node foo extends FooBase {}

---

(Program (NodeDeclarationStatement (Decorator (DecoratorIdentifier)) (NodeName (CamelIdentifier)) (ExtendsName (PascalIdentifier))))

==========================================
Export abstract node_declaration_statement
==========================================

@fooDeco()
export abstract node foo extends FooBase {}

---

 (Program (NodeDeclarationStatement (Decorator (DecoratorIdentifier)) (Export) (NodeName (CamelIdentifier)) (ExtendsName (PascalIdentifier))))

=================================
Member node_declaration_statement
=================================

@fooDeco()
export abstract node foo extends FooBase {
    @parental(HaikuProgramTree)
    blocks[] -> Block
}

---

(Program (NodeDeclarationStatement
    (Decorator (DecoratorIdentifier))
    (Export)
    (NodeName (CamelIdentifier))
    (ExtendsName (PascalIdentifier))
    (NodeDeclarationMember
    (NodeEdgeDeclaration
        (Decorator (DecoratorIdentifier) (DecoratorArg (PascalIdentifier)))
        (NodeEdgeName (CamelIdentifier))
        (NodeEdgeModifier (NodeEdgeArrayModifier))
        (TypeUnion (SingleType (TypeName (PascalIdentifier))))))))
