=================================
Simple node_declaration_statement
=================================

node foo {}

---

  (Module (statements__list (NodeTypeDeclarationStatement (name (CamelIdentifier)))))



==================================
Extends node_declaration_statement
==================================

node foo extends FooBase {}

---

   (Module (statements__list (NodeTypeDeclarationStatement (name (CamelIdentifier)) (extends (PascalIdentifier)))))



====================================
Decorator node_declaration_statement
====================================

@fooDeco()
node foo extends FooBase {}

---

    (Module (statements__list (NodeTypeDeclarationStatement (decorators__list (Decorator (identifier (DecoratorIdentifier)))) (name (CamelIdentifier)) (extends (PascalIdentifier)))))


==========================================
Export abstract node_declaration_statement
==========================================

@fooDeco()
abstract node foo extends FooBase {}

---

(Module (statements__list (NodeTypeDeclarationStatement (decorators__list (Decorator (identifier (DecoratorIdentifier)))) (abstract) (name (CamelIdentifier)) (extends (PascalIdentifier)))))

=================================
Member node_declaration_statement
=================================

@fooDeco()
abstract node foo extends FooBase {
    @parental(HaikuProgramTree)
    blocks[] -> Block
}

---

    (Module (statements__list (NodeTypeDeclarationStatement (decorators__list (Decorator (identifier (DecoratorIdentifier)))) (abstract) (name (CamelIdentifier)) (extends (PascalIdentifier)) (members__list (NodeEdgeDeclaration (decorators__list (Decorator (identifier (DecoratorIdentifier)) (parameters__list (Expression (PrimaryExpression (PascalIdentifier)))))) (name (CamelIdentifier)) (modifier (NodeEdgeModifier (NodeEdgeArrayModifier))) (type (Type (TypeUnion (types__list (SingleType (TypeIdentifier (PascalIdentifier))))))))))))

