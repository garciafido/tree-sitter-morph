=================================
Simple node_declaration_statement
=================================

node foo {}

---

 (Module (declarations__list (NodeTypeDeclaration (identifier (Identifier)))))


==================================
Extends node_declaration_statement
==================================

node foo extends FooBase {}

---

(Module (declarations__list (NodeTypeDeclaration (identifier (Identifier)) (extends (Identifier)))))


====================================
Decorator node_declaration_statement
====================================

@fooDeco()
@barDeco()
node foo extends FooBase {}

---

  (Module (declarations__list (NodeTypeDeclaration (decorators__list (DecoratorIdentifier)) (decorators__list (DecoratorIdentifier)) (identifier (Identifier)) (extends (Identifier)))))


==========================================
Export abstract node_declaration_statement
==========================================

@fooDeco()
abstract node foo extends FooBase {}

---

    (Module (declarations__list (NodeTypeDeclaration (decorators__list (DecoratorIdentifier)) (abstract) (identifier (Identifier)) (extends (Identifier)))))


=================================
Member node_declaration_statement
=================================

@fooDeco()
abstract node foo extends FooBase {
    @parental(HaikuProgramTree)
    blocks[] -> Block
}

---

   (Module (declarations__list (NodeTypeDeclaration (decorators__list (DecoratorIdentifier)) (abstract) (identifier (Identifier)) (extends (Identifier)) (members__list (NodeEdgeDeclaration (decorators__list (DecoratorIdentifier) (parameters__list (Expression (PrimaryExpression (Identifier))))) (identifier (Identifier)) (modifier (NodeEdgeArrayModifier)) (type (TypeUnion (types__list (TypeIdentifier (Identifier))))))))))
